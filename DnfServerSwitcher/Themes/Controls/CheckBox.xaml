<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">
    <d:ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/DnfServerSwitcher;component/Themes/ThemeParameters/ColorsBlueNuke.xaml" />
        <ResourceDictionary Source="pack://application:,,,/DnfServerSwitcher;component/Themes/ThemeParameters/ThemeSizes.xaml" />
    </d:ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="NukedStyleCheckbox" TargetType="{x:Type CheckBox}">
        
        <Setter Property="Background" Value="{DynamicResource NukedBrushBackgroundDark}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NukedBrushBorderLight}" />
        <Setter Property="Foreground" Value="{DynamicResource NukedBrushTextLight}" />
        <Setter Property="BorderThickness" Value="{DynamicResource NukedControlBorderThickness}" />

        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="Auto" />

        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" x:Name="border"
                                CornerRadius="4"
                                Width="18"
                                Height="18"
                                Margin="2,0" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"
                                Effect="{DynamicResource NukedGlowControl}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" 
                                      Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " 
                                      Fill="{TemplateBinding Foreground}" 
                                      Margin="{TemplateBinding Padding}" 
                                      Opacity="0" 
                                      Stretch="Uniform"/>
                                <Rectangle x:Name="indeterminateMark" 
                                           Fill="{TemplateBinding Foreground}" 
                                           Margin="{TemplateBinding Padding}" 
                                           Opacity="0"/>
                            </Grid>
                        </Border>
                        
                        <ContentPresenter Grid.Column="1" 
                                          Focusable="False" 
                                          RecognizesAccessKey="True" 
                                          Margin="{TemplateBinding Padding}"

                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource NukedBrushBorderHighlight}" />
                            <Setter Property="Effect" TargetName="border"
                                    Value="{DynamicResource NukedGlowControlMouseOver}" />
                            <Setter Property="Fill" TargetName="optionMark" 
                                    Value="{DynamicResource NukedBrushBorderHighlight}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" 
                                    Value="{DynamicResource NukedBrushBorderHighlight}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource NukedBrushBorderHighlight}" />
                            <Setter Property="Effect" TargetName="border"
                                    Value="{DynamicResource NukedGlowControlMouseOver}" />
                            <Setter Property="Fill" TargetName="optionMark" 
                                    Value="{DynamicResource NukedBrushBorderHighlight}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" 
                                    Value="{DynamicResource NukedBrushBorderHighlight}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource NukedBrushBackgroundDarkest}" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource NukedBrushBorderHighlight}" />
                            <Setter Property="Effect" TargetName="border"
                                    Value="{DynamicResource NukedGlowControlMouseOver}" />
                            <Setter Property="Fill" TargetName="optionMark" 
                                    Value="{DynamicResource NukedBrushBorderHighlight}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" 
                                    Value="{DynamicResource NukedBrushBorderHighlight}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource NukedBrushBorderDisabled}" />
                            <Setter Property="Effect" TargetName="border"
                                    Value="{DynamicResource NukedGlowControlDisabled}" />
                            <Setter Property="Background"
                                    Value="{DynamicResource NukedBrushBackgroundDisabled}" />
                            <Setter Property="Fill" TargetName="optionMark" 
                                    Value="{DynamicResource NukedBrushTextLightDisabled}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" 
                                    Value="{DynamicResource NukedBrushTextLightDisabled}"/>
                            <Setter Property="Foreground" 
                                    Value="{DynamicResource NukedBrushTextLightDisabled}"/>
                        </Trigger>
                        
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>