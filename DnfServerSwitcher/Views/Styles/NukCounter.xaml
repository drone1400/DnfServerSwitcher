<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:converters="clr-namespace:DukNuk.Wpf.Themes.Converters;assembly=DukNukWpf"
                    xmlns:controls="clr-namespace:DukNuk.Wpf.Controls;assembly=DukNukWpf"
                    mc:Ignorable="d">
    
    <!-- Generic style for NukCounter for use with default WPF theme... -->
    
    <converters:NukBoolToVisibilityConverter x:Key="DukNuk.Converter.Bool2Vis" />
    
    <Geometry x:Key="DukNuk.Style.NukCounter.ArrowDownGeometry">M 0,0 L 2.5,5 L 5,0 Z</Geometry>

    <Style
        x:Key="Dss.Style.NukCounter.Button"
        TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
    </Style>


    <Style
        x:Key="Dss.Style.NukCounter.GenericBase"
        TargetType="{x:Type controls:NukCounterBase}">

        <Setter Property="Focusable" Value="False" />
        
        <Setter Property="ForegroundInvalidValue" Value="Red"/>

        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="Auto" />

        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:NukCounterBase}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <!-- Button Preview Mouse Up/Down and TextBox TextChanged are handled in code behind by launching the coresponding commands-->
                        <Button
                            Name="PART_buttonDec"
                            Grid.Column="0"
                            Style="{StaticResource Dss.Style.NukCounter.Button}"
                            Visibility="{TemplateBinding Property=ShowButtons, Converter={StaticResource DukNuk.Converter.Bool2Vis}}"
                            IsEnabled="{TemplateBinding ShowButtons}"
                            Margin="2,2,4,2">
                            <Path x:Name="ArrowDown"
                                  Data="{DynamicResource DukNuk.Style.NukCounter.ArrowDownGeometry}"
                                  Fill="Black"
                                  Margin="4"
                                  Stretch="Uniform"
                                  RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="90" />
                                </Path.RenderTransform>
                            </Path>
                        </Button>
                        <Button
                            Name="PART_buttonInc"
                            Grid.Column="2"
                            Style="{StaticResource Dss.Style.NukCounter.Button}"
                            Visibility="{TemplateBinding Property=ShowButtons, Converter={StaticResource DukNuk.Converter.Bool2Vis}}"
                            IsEnabled="{TemplateBinding ShowButtons}"
                            Margin="4,2,2,2">
                            <Path x:Name="ArrowUp"
                                  Data="{DynamicResource DukNuk.Style.NukCounter.ArrowDownGeometry}"
                                  Fill="Black"
                                  Margin="4"
                                  Stretch="Uniform"
                                  RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="-90" />
                                </Path.RenderTransform>
                            </Path>
                        </Button>
                        <TextBox
                            Name="PART_theTextBox" 
                            Grid.Column="1" Grid.Row="0"
                            Margin="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{Binding ValueString, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            FontSize="{TemplateBinding FontSize}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontStyle="{TemplateBinding FontStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsStringValueValid" Value="False">
                            <Setter Property="Foreground" Value="{Binding ForegroundInvalidValue, RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>